from PIL import Image, ImageEnhance
from moviepy.editor import *
import cv2
import os
import os.path
import numpy as np


# функция для определения яркости изображения
def func_brightness(frame):
    gray = cv2.cvtColor(frame, cv2.COLOR_RGB2GRAY)
    return np.mean(gray)
    # функция для определения среднего значения по цвету

name = input()
video = cv2.VideoCapture(name)  # считываем видеофайл

# определяем длину видефайла
video_length = int(video.get(cv2.CAP_PROP_FRAME_COUNT))

# определяем фреймрейт(кадры в секунду)
fps = int(video.get(cv2.CAP_PROP_FPS))

count = 1
buffer = []
while True:
    is_read, frame = video.read()
    if not is_read:
        # выйти из цикла, если нет фреймов для чтения
        break
    frame_name = f"{count}.jpg"
    if func_brightness(frame) > 200:  # нахождение плохих кадров
        im = Image.fromarray(frame)
        enhancer = ImageEnhance.Brightness(im)
        factor = 0.1
        frame = np.array(enhancer.enhance(factor))  # затемнение плохого кадра
        buffer.append(frame)
        print(f"{frame_name} сохранён")
    else:
        buffer.append(frame)
        print(f"{frame_name} сохранён")
    count += 1

# начало создания нового видео
height, width, channels = buffer[0].shape
fourcc = cv2.VideoWriter_fourcc(*'XVID')
video_writer = cv2.VideoWriter("result.avi", fourcc, fps, (width, height))

# запись кадров из буфера в новое видео
for frame in buffer:
    video_writer.write(frame)

cv2.destroyAllWindows()
video_writer.release()

# конец создания нового видео
video1 = VideoFileClip("disclaimer.mp4")
video2 = VideoFileClip("result.avi")
resized_video1 = video1.resize((width, height))
resized_video2 = video2.resize((width, height))
videos = [resized_video1, resized_video2]   # объединение предупреждения и нового видео

final_video = concatenate_videoclips(videos, method="compose")
final_video.write_videofile("3.mp4")  # конечное видео
